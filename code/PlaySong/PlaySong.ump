
use music.*;

class PlaySong{
	// This will be used to display the time remaining and track that time
  // In a real system, this would be in minutes, but it will be seconds in this simulation
  Integer currentMinute = 0;
  Integer currentSecond = 0;
  
  Integer numMins = 0;
  Integer numSecs = 0;
  
  Integer secondsCounter = 0;
  
  String songTitle = "";
  String albumTitle = "";
  String artistName = "";
  String playListTitle = "";
  
  
  // This will be set if a timed operation needs to not count down, e.g. when the door is open
  Boolean paused = false;
  Boolean stopped = false;
	
	
	queued Core{
		idle{
		playSong/{startTimer(numMins,numSecs);} -> play;
		}
		
		play{
		entry/{display("Now playing : " + songTitle + " by " + artistName);}
		
		forwardPlay -> forward;
		fastForward -> fastforward;
		backWard -> backward;
		fastBackward -> fastbackward;
		pausePlay -> pause;
		stopPlay -> stop;
		}
		
		forward{
		
		}
		
		fastforward{
		
		}
		
		backward{
		
		}
		
		fastbackward{
		
		}
		
		pause{
		entry/{paused = true;}
		entry/{display("PAUSED");}
		
		resumePlay/{paused = false; 
		System.out.println(currentMinute);
		startTimer(currentMinute,currentSecond);} -> play;
		
		stopMusic/ {
		paused = false;
		stopped = true;} -> stop;
		}
		
		stop{
		entry/{display("Stopped");}
		
		after(1.0)/{stopped = false;} -> idle;
		}
	}
	
	
	queued timingSm {
    idle {
      startTimer(Integer numMins, Integer numSecs) -> countingDown;
    }
    countingDown {
      startTimer(Integer numMins, Integer numSecs) -> countingDown;
      after(1.0) [currentMinute < numMins && ! paused && !stopped]  / {
        displayTime();
        if(currentSecond == 5){
        	currentMinute = currentMinute + 1;
        	currentSecond = 0;
        }else{
        	currentSecond ++;
        }
      } -> countingDown;
      after(1.0) [currentMinute >= numMins && currentSecond >= numSecs] / {
      	secondsCounter = 0;
      } -> idle;
    }
  }
  
  void display(String s) {
    System.out.println(s);
  }
  
  void displayTime() {
    System.out.println("DISPLAY: "+currentMinute + ":" + currentSecond);
  } 

  public static void main(String[] argv) {
   	PlaySong p = new PlaySong();
   	System.out.println("Enter Command :");
   	p.setNumMins(6);
   	p.setNumSecs(5);
   	p.setArtistName("Owens Ehimen");
   	p.setSongTitle("Test");
    Scanner s = new Scanner(System.in);
    String command;
    while(true) {
      command = s.nextLine();
      switch(command) {
        case "quit": System.exit(0);
        
        case "play": 
        if(p.getPaused()){
        	p.resumePlay();
        }else{
        	p.playSong();
        }
          break;
          
          
        case "p":
          p.pausePlay();
          break;          
        
        case "s":
          if(p.getPaused()){
        	p.stopMusic();
        }else{
        	p.stopPlay();
        }
          break; 
                   
        case "c":
          
          break;          
        default:
          break;
      }
    }
  }
	
}

